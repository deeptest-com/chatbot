[
  {
    "instruction": "高亮显示${excel_path}中${materials}材质的组件。",
    "input": "",
    "output": "Language=CATSCRIPT\n\nSub CATMain()\n\n        Dim excelPath = \"${excel_path}\" \n        Dim materials = \"${materials}\"\n        \n        Dim materialNames() As String = StrToArr materials\n\n        If fso.FileExists(excelPath) = False Then\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\n            If fso.FileExists(excelPath) = False Then\n                    MsgBox \"Excel文件不存在: \" & excelPath\n                    Exit Sub\n            End If\n        End If\n        Dim partNumberTitle\n        partNumberTitle = \"Part number\"\n        Dim mapSearch\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\n        \n        For Each str As String In materialNames\n            AddToList mapSearch, \"MaterialName\", str\n        Next\n\n        Dim showPartNumber\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\n\n        Dim showChildComps As Object\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\n        Dim transparencyChildComps As Object\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\n        Dim ret As Integer\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\nEnd Sub"
  },
  {
    "instruction": "高亮显示${materials}材质的组件, part number表格路径${excel_path}。",
    "input": "",
    "output": ""
  }
]
